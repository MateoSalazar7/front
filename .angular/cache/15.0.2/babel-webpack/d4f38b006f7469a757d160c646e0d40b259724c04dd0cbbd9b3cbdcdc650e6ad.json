{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ActualizarEmpleadoComponent = class ActualizarEmpleadoComponent {\n  constructor(formBuilder, api) {\n    this.formBuilder = formBuilder;\n    this.api = api;\n    this.studentobj = new StudentModel();\n    this.btnUpdateShow = false;\n    this.btnSaveShow = true;\n  }\n  ngOnInit() {\n    this.formValue = this.formBuilder.group({\n      name: [''],\n      class: [''],\n      email: [''],\n      address: [''],\n      city: [''],\n      password: ['']\n    });\n    this.AllStudent();\n  }\n  AddStudent() {\n    this.studentobj.address = this.formValue.value.address;\n    this.studentobj.city = this.formValue.value.city;\n    this.studentobj.name = this.formValue.value.name;\n    this.studentobj.email = this.formValue.value.email;\n    this.studentobj.password = this.formValue.value.password;\n    this.studentobj.class = this.formValue.value.class;\n    this.api.postStudent(this.studentobj).subscribe({\n      next: v => {\n        console.log(v);\n      },\n      error: e => {\n        alert(\"Error\");\n        console.log(e);\n      },\n      complete: () => {\n        console.log('complete');\n        alert(\"Data Saved\");\n        this.AllStudent();\n        this.formValue.reset();\n      }\n    });\n  }\n  AllStudent() {\n    this.api.getStudent().subscribe(res => {\n      this.allstudent = res;\n    });\n  }\n  EditStudent(data) {\n    this.formValue.controls['name'].setValue(data.name);\n    this.formValue.controls['city'].setValue(data.city);\n    this.formValue.controls['address'].setValue(data.address);\n    this.formValue.controls['email'].setValue(data.email);\n    this.formValue.controls['class'].setValue(data.class);\n    this.formValue.controls['password'].setValue(data.password);\n    this.studentobj.id = data.id;\n    this.UpdateShowBtn();\n  }\n  UpdateStudent() {\n    this.studentobj.address = this.formValue.value.address;\n    this.studentobj.city = this.formValue.value.city;\n    this.studentobj.name = this.formValue.value.name;\n    this.studentobj.email = this.formValue.value.email;\n    this.studentobj.password = this.formValue.value.password;\n    this.studentobj.class = this.formValue.value.class;\n    this.api.putStudent(this.studentobj, this.studentobj.id).subscribe(res => {\n      alert(\"Data Updated\");\n      this.AllStudent();\n      this.SaveShowBtn();\n    });\n  }\n  DeleteStudent(data) {\n    this.api.deleteStudent(data.id).subscribe(res => {\n      alert(\"Record Deleted\");\n      this.AllStudent();\n    });\n  }\n  UpdateShowBtn() {\n    this.btnUpdateShow = true;\n    this.btnSaveShow = false;\n  }\n  SaveShowBtn() {\n    this.btnUpdateShow = false;\n    this.btnSaveShow = true;\n  }\n};\nActualizarEmpleadoComponent = __decorate([Component({\n  selector: 'app-actualizar-empleado',\n  templateUrl: './actualizar-empleado.component.html',\n  styleUrls: ['./actualizar-empleado.component.css']\n})], ActualizarEmpleadoComponent);\nexport { ActualizarEmpleadoComponent };","map":{"version":3,"mappings":"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","names":["Component","ActualizarEmpleadoComponent","constructor","formBuilder","api","StudentModel","ngOnInit","formValue","group","name","class","email","address","city","password","AllStudent","AddStudent","studentobj","value","postStudent","subscribe","next","v","console","log","error","e","alert","complete","reset","getStudent","res","allstudent","EditStudent","data","controls","setValue","id","UpdateShowBtn","UpdateStudent","putStudent","SaveShowBtn","DeleteStudent","deleteStudent","btnUpdateShow","btnSaveShow","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\matit\\OneDrive\\Documentos\\5to Trimestre\\Arle\\PROYECTO\\ProyectoFinal-master\\ProyectoFinal-master\\front\\src\\app\\actualizar\\actualizar-empleado\\actualizar-empleado.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { actualizarProducto, ObjetoProducto } from 'src/app/clases/producto/producto';\nimport { ProductoService } from 'src/app/servicios/producto/producto.service';\n\n@Component({\n  selector: 'app-actualizar-empleado',\n  templateUrl: './actualizar-empleado.component.html',\n  styleUrls: ['./actualizar-empleado.component.css']\n})\nexport class ActualizarEmpleadoComponent {\n\n  /* formulario = new FormGroup({\n    id_empleado: new FormControl ('',Validators.required),\n    nombre_empleado: new FormControl ('',Validators.required),\n    descripcion: new FormControl('',Validators.required),\n    valor_venta: new FormControl('',Validators.required),\n    cantidad_stock: new FormControl('', Validators.required),\n  })\n  \n  Producto: ObjetoProducto[]=[];\n  listarproductos: ObjetoProducto[]=[];\n  ProductoService: any;\n\n  constructor(private formBuilder:FormBuilder, private router:Router){ }\n  ngOnInit(): void {\n    throw new Error('Method not implemented.');\n  }\n\n  actualizar_producto(form:any){\n    console.log(\"Estoy dentro de actualizar productos\")\n    const producto:actualizarProducto={\n      Id_Producto:form.Id_Producto,\n      nombre_producto:form.nombre_producto,\n      descripcion:form.descripcion,\n      valor_venta:form.valor_venta,\n      cantidad_stock:form.cantidad_stock\n    }\n\n    console.log(\"Va a disparar el servicio\");\n    this.ProductoService.create(producto).subscribe({\n\n    })\n  } */\n  formValue!: FormGroup; \n\n  studentobj: StudentModel = new StudentModel;\n\n  allstudent: any;\n\n  btnUpdateShow:boolean = false;\n\n  btnSaveShow:boolean = true;\n\n\n  constructor(private formBuilder:FormBuilder, private api:ApiService ) { }\n\n  ngOnInit(): void {\n    this.formValue = this.formBuilder.group({\n      name:[''],\n      class:[''],\n      email:[''],\n      address:[''],\n      city:[''],\n      password:['']\n    })\n    this.AllStudent();\n  }\n\n  AddStudent(){\n    this.studentobj.address = this.formValue.value.address;\n    this.studentobj.city = this.formValue.value.city;\n    this.studentobj.name = this.formValue.value.name;\n    this.studentobj.email = this.formValue.value.email;\n    this.studentobj.password = this.formValue.value.password;\n    this.studentobj.class = this.formValue.value.class;\n\n    this.api.postStudent(this.studentobj).subscribe({\n      next: (v) => {console.log(v)},\n    error: (e) => {\n      alert(\"Error\")\n      console.log(e)},\n    complete: () => {\n      console.log('complete')\n      alert(\"Data Saved\")\n      this.AllStudent();\n      this.formValue.reset();\n    } })\n\n  }\n\n  AllStudent(){\n    this.api.getStudent().subscribe(res => {\n      this.allstudent = res;\n    })\n  }\n\n  EditStudent(data:any){\n    this.formValue.controls['name'].setValue(data.name);\n    this.formValue.controls['city'].setValue(data.city);\n    this.formValue.controls['address'].setValue(data.address);\n    this.formValue.controls['email'].setValue(data.email);\n    this.formValue.controls['class'].setValue(data.class);\n    this.formValue.controls['password'].setValue(data.password);\n    this.studentobj.id = data.id;\n    this.UpdateShowBtn();\n  }\n\n  UpdateStudent(){\n    this.studentobj.address = this.formValue.value.address;\n    this.studentobj.city = this.formValue.value.city;\n    this.studentobj.name = this.formValue.value.name;\n    this.studentobj.email = this.formValue.value.email;\n    this.studentobj.password = this.formValue.value.password;\n    this.studentobj.class = this.formValue.value.class;\n    this.api.putStudent(this.studentobj,this.studentobj.id).subscribe(res => {\n      alert(\"Data Updated\");\n      this.AllStudent();\n      this.SaveShowBtn();\n    })\n\n\n  }\n\n\n  DeleteStudent(data:any){\n    this.api.deleteStudent(data.id).subscribe(res => {\n      alert(\"Record Deleted\");\n      this.AllStudent();\n    })\n\n  }\n\n  UpdateShowBtn()\n  {\n    this.btnUpdateShow = true;\n    this.btnSaveShow = false;\n  }\n  SaveShowBtn()\n  {\n    this.btnUpdateShow = false;\n    this.btnSaveShow = true;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}