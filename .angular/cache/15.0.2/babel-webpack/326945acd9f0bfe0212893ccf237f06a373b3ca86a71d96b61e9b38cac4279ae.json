{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginComponent = class LoginComponent {\n  constructor(formularios, loginService, envioData, router) {\n    this.formularios = formularios;\n    this.loginService = loginService;\n    this.envioData = envioData;\n    this.router = router;\n    this.usuario = \"\";\n    this.nombre_usuario = \"\";\n    this.formulario = this.formularios.group({\n      correo: [''],\n      clave: ['']\n    });\n  }\n  ngOnInit() {}\n  ingresar(formulario) {\n    console.log(formulario);\n    this.loginService.inicioSesion(this.formulario.value).subscribe(data => {\n      this.usuario = data.usuario;\n      console.log(this.usuario);\n      this.nombre_usuario = data.nombre_usuario;\n      if (this.usuario == \"usuario\") {\n        this.router.navigateByUrl('agregarproducto');\n        console.log(data.correo);\n        this.envioData.envioCorreo(data.correo);\n      } else {\n        if (this.usuario == \"usuario\") {\n          this.router.navigateByUrl('agregarproducto');\n        } else {\n          alert(\"Usuario no identificado\");\n          this.router.navigateByUrl('login');\n        }\n      }\n    }, () => {\n      // Si hubo un error dentro del registro del usuario\n      alert(\"Contrasena Incorrecta o Usuario no registrado\");\n    });\n    /* Capturar datos del formulario registro */\n    //    formulario = new FormGroup({\n    //     correo: new FormControl('',Validators.required),\n    //     clave: new FormControl('',Validators.required),\n    //   })\n    //   //Objeto grupo\n    //   Usuario: ObjetoUsuario[]=[];\n    //   listagrupos: ObjetoUsuario[]=[];\n    //   constructor(private Servicio_Login: LoginService, private formBuilder:FormBuilder) { }\n    //   ngOnInit(): void {\n    //   }\n    // /*   escuchandogrupos(){\n    //     this.servicio_grupo.getAll().subscribe(response=>{\n    //       this.listagrupos=response.cursos;\n    //   })\n    //     }\n    //  */\n    //     Registrar_usuario(form:any){\n    //       console.log(\"Estoy adentro de login usuario\")\n    //       const usuario: LoginUsuario={\n    //         correo:form.correo,\n    //         clave:form.clave,\n    //       }\n    //       console.log(\"Va a disparar el servicio\");\n    //       this.Servicio_Login.create(usuario).subscribe({\n    //       })\n    //     }\n  }\n};\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAa1C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAmBC,WAAuB,EAASC,YAAyB,EAASC,SAA0B,EAAUC,MAAa;IAAnH,gBAAW,GAAXH,WAAW;IAAqB,iBAAY,GAAZC,YAAY;IAAsB,cAAS,GAATC,SAAS;IAA2B,WAAM,GAANC,MAAM;IAF/H,YAAO,GAAK,EAAE;IACd,mBAAc,GAAK,EAAE;IAEjB,IAAI,CAACC,UAAU,GAAC,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACrCC,MAAM,EAAC,CAAC,EAAE,CAAC;MACXC,KAAK,EAAC,CAAC,EAAE;KACV,CAAC;EAEH;EAEHC,QAAQ,IACR;EAEAC,QAAQ,CAACL,UAAc;IACrBM,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;IACvB,IAAI,CAACH,YAAY,CAACW,YAAY,CAAC,IAAI,CAACR,UAAU,CAACS,KAAK,CAAC,CAACC,SAAS,CAC1DC,IAAI,IAAI;MACP,IAAI,CAACC,OAAO,GAACD,IAAI,CAACC,OAAO;MACzBN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,OAAO,CAAC;MACzB,IAAI,CAACC,cAAc,GAACF,IAAI,CAACE,cAAc;MACvC,IAAG,IAAI,CAACD,OAAO,IAAE,SAAS,EAAC;QACzB,IAAI,CAACb,MAAM,CAACe,aAAa,CAAC,iBAAiB,CAAC;QAC5CR,OAAO,CAACC,GAAG,CAACI,IAAI,CAACT,MAAM,CAAC;QACxB,IAAI,CAACJ,SAAS,CAACiB,WAAW,CAACJ,IAAI,CAACT,MAAM,CAAC;OACxC,MAAI;QACH,IAAG,IAAI,CAACU,OAAO,IAAE,SAAS,EAAE;UAC1B,IAAI,CAACb,MAAM,CAACe,aAAa,CAAC,iBAAiB,CAAC;SAC7C,MAAK;UACJE,KAAK,CAAC,yBAAyB,CAAC;UAChC,IAAI,CAACjB,MAAM,CAACe,aAAa,CAAC,OAAO,CAAC;;;IAGxC,CAAC,EACA,MAAK;MACJ;MACAE,KAAK,CAAC,+CAA+C,CAAC;IAC1D,CAAC,CACF;IAEF;IAEH;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IAEA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;EACA;CACC;;AA9EYtB,cAAc,eAL1BD,SAAS,CAAC;EACTwB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWzB,cAAc,CA8E1B;SA9EYA,cAAc","names":["Component","LoginComponent","constructor","formularios","loginService","envioData","router","formulario","group","correo","clave","ngOnInit","ingresar","console","log","inicioSesion","value","subscribe","data","usuario","nombre_usuario","navigateByUrl","envioCorreo","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\matit\\OneDrive\\Documentos\\5to Trimestre\\Arle\\PROYECTO\\ProyectoFinal-master\\ProyectoFinal-master\\front\\src\\app\\usuario\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ObjetoUsuario } from 'src/app/clases/usuario/usuario';\nimport { LoginService } from '../../servicios/login.service.spec';\nimport { LoginUsuario } from '../../clases/usuario/usuario';\nimport { Router } from '@angular/router';\nimport { EnvioDataService } from 'src/app/servicios/envioData/envio-data.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n\n  formulario:FormGroup;\n  usuario:any=\"\"\n  nombre_usuario:any=\"\"\n  constructor(public formularios:FormBuilder,private loginService:LoginService,private envioData:EnvioDataService, private router:Router) {\n      this.formulario=this.formularios.group({\n        correo:[''],\n        clave:[''],\n      });\n\n     }\n\n  ngOnInit(): void {\n  }\n\n  ingresar(formulario:any):any{\n    console.log(formulario)\n    this.loginService.inicioSesion(this.formulario.value).subscribe(\n        (data) => {\n          this.usuario=data.usuario\n          console.log(this.usuario)\n          this.nombre_usuario=data.nombre_usuario\n          if(this.usuario==\"usuario\"){\n            this.router.navigateByUrl('agregarproducto')\n            console.log(data.correo)\n            this.envioData.envioCorreo(data.correo)\n          }else{\n            if(this.usuario==\"usuario\") {\n              this.router.navigateByUrl('agregarproducto')\n            }else {\n              alert(\"Usuario no identificado\")\n              this.router.navigateByUrl('login')\n            }\n          }\n        },\n         () => {\n          // Si hubo un error dentro del registro del usuario\n          alert(\"Contrasena Incorrecta o Usuario no registrado\")\n      }\n    )\n\n   /* Capturar datos del formulario registro */\n\n//    formulario = new FormGroup({\n//     correo: new FormControl('',Validators.required),\n//     clave: new FormControl('',Validators.required),\n//   })\n\n//   //Objeto grupo\n//   Usuario: ObjetoUsuario[]=[];\n//   listagrupos: ObjetoUsuario[]=[];\n\n//   constructor(private Servicio_Login: LoginService, private formBuilder:FormBuilder) { }\n//   ngOnInit(): void {\n\n//   }\n\n// /*   escuchandogrupos(){\n//     this.servicio_grupo.getAll().subscribe(response=>{\n//       this.listagrupos=response.cursos;\n//   })\n//     }\n//  */\n\n//     Registrar_usuario(form:any){\n//       console.log(\"Estoy adentro de login usuario\")\n//       const usuario: LoginUsuario={\n//         correo:form.correo,\n//         clave:form.clave,\n//       }\n\n//       console.log(\"Va a disparar el servicio\");\n//       this.Servicio_Login.create(usuario).subscribe({\n\n//       })\n//     }\n}\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}