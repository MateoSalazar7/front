{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(clientHtpp) {\n    this.clientHtpp = clientHtpp;\n    this.LOGIN = 'http://localhost:4200';\n  }\n  inicioSesion(datoslogin) {\n    return this.clientHtpp.post(this.LOGIN, datoslogin, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n  //Iniciamos en el constructor los metodos del HTTP\n  //Declaramos la funcion para realizar consultas al api\n  getTodo() {\n    let header = new HttpHeaders().set('Type-content', 'aplication/json');\n    return this.clientHtpp.get(LOGIN, {\n      headers: header\n    });\n  }\n  getAll() {\n    return this.clientHtpp.get(LOGIN);\n  }\n  get(id) {\n    return this.clientHtpp.get(`${LOGIN}/${id}`);\n  }\n  create(data) {\n    return this.clientHtpp.post(`${LOGIN}/login`, data);\n  }\n  update(id, data) {\n    return this.clientHtpp.put(`${LOGIN}/${id}`, data);\n  }\n  delete(id) {\n    return this.clientHtpp.delete(`${LOGIN}/${id}`);\n  }\n  deleteAll() {\n    return this.clientHtpp.delete(LOGIN);\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAS9D,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAF9B,UAAK,GAAW,uBAAuB;EAEM;EAE7CC,YAAY,CAACC,UAAc;IACzB,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAC,IAAI,CAACC,KAAK,EAAEF,UAAU,EAAE;MAAEG,OAAO,EAAE;QAAE,cAAc,EAAE;MAAkB;IAAE,CAAC,CAAC;EACzG;EAEA;EAGA;EACAC,OAAO;IACL,IAAIC,MAAM,GAAE,IAAIV,WAAW,EAAE,CAACW,GAAG,CAAC,cAAc,EAAC,iBAAiB,CAAC;IACnE,OAAO,IAAI,CAACR,UAAU,CAACS,GAAG,CAACL,KAAK,EAAC;MAACC,OAAO,EAACE;IAAM,CAAC,CAAC;EACpD;EAEAG,MAAM;IACJ,OAAO,IAAI,CAACV,UAAU,CAACS,GAAG,CAAiBL,KAAK,CAAC;EACnD;EAEAK,GAAG,CAACE,EAAO;IACT,OAAO,IAAI,CAACX,UAAU,CAACS,GAAG,CAAC,GAAGL,KAAK,IAAIO,EAAE,EAAE,CAAC;EAC9C;EAEAC,MAAM,CAACC,IAAkB;IACvB,OAAO,IAAI,CAACb,UAAU,CAACG,IAAI,CAAC,GAAGC,KAAK,QAAQ,EAAES,IAAI,CAAC;EACrD;EAEAC,MAAM,CAACH,EAAO,EAAEE,IAAS;IACvB,OAAO,IAAI,CAACb,UAAU,CAACe,GAAG,CAAC,GAAGX,KAAK,IAAIO,EAAE,EAAE,EAAEE,IAAI,CAAC;EACpD;EAEAG,MAAM,CAACL,EAAO;IACZ,OAAO,IAAI,CAACX,UAAU,CAACgB,MAAM,CAAC,GAAGZ,KAAK,IAAIO,EAAE,EAAE,CAAC;EACjD;EAEAM,SAAS;IACP,OAAO,IAAI,CAACjB,UAAU,CAACgB,MAAM,CAACZ,KAAK,CAAC;EACtC;EAAC;qBAzCUN,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAoB,SAAZpB,YAAY;IAAAqB,YAHX;EAAM","names":["HttpHeaders","LoginService","constructor","clientHtpp","inicioSesion","datoslogin","post","LOGIN","headers","getTodo","header","set","get","getAll","id","create","data","update","put","delete","deleteAll","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\matit\\OneDrive\\Documentos\\5to Trimestre\\Arle\\PROYECTO\\ProyectoFinal-master\\ProyectoFinal-master\\front\\src\\app\\servicios\\login.service.ts"],"sourcesContent":["\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginUsuario } from '../clases/usuario/usuario';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n\r\n})\r\nexport class LoginService {\r\n\r\n  LOGIN: String = 'http://localhost:4200'\r\n\r\n  constructor(private clientHtpp:HttpClient) { }\r\n\r\n  inicioSesion(datoslogin:any):Observable<any>{\r\n    return this.clientHtpp.post(this.LOGIN, datoslogin, { headers: { 'Content-Type': 'application/json' }})\r\n  }\r\n\r\n  //Iniciamos en el constructor los metodos del HTTP\r\n  \r\n\r\n  //Declaramos la funcion para realizar consultas al api\r\n  getTodo(){\r\n    let header= new HttpHeaders().set('Type-content','aplication/json')\r\n    return this.clientHtpp.get(LOGIN,{headers:header})\r\n  }\r\n\r\n  getAll(): Observable<LoginUsuario[]> {\r\n    return this.clientHtpp.get<LoginUsuario[]>(LOGIN);\r\n  }\r\n\r\n  get(id: any): Observable<any> {\r\n    return this.clientHtpp.get(`${LOGIN}/${id}`);\r\n  }\r\n\r\n  create(data: LoginUsuario): Observable<any> {\r\n    return this.clientHtpp.post(`${LOGIN}/login`, data);\r\n  }\r\n\r\n  update(id: any, data: any): Observable<any> {\r\n    return this.clientHtpp.put(`${LOGIN}/${id}`, data);\r\n  }\r\n\r\n  delete(id: any): Observable<any> {\r\n    return this.clientHtpp.delete(`${LOGIN}/${id}`);\r\n  }\r\n\r\n  deleteAll(): Observable<any> {\r\n    return this.clientHtpp.delete(LOGIN);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}